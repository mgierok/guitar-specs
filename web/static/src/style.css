@import 'tailwindcss';

@theme {
  --font-sans:
    system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell,
    Helvetica Neue, Arial, Noto Sans, sans-serif;
  
  /* New v4.1.12 features */
  --color-primary: #0d0d0d;
  --color-secondary: #e63946;
  --color-accent: #ffd166;
  --color-bg: #f8f9fa;
  --color-surface: #ffffff;
  --color-text: #1c1c1c;
  --color-muted: #6b7280;
  --color-ring: #111827;
  
  /* Enhanced spacing scale */
  --spacing-xs: 0.25rem;
  --spacing-sm: 0.5rem;
  --spacing-md: 1rem;
  --spacing-lg: 1.5rem;
  --spacing-xl: 2rem;
  --spacing-2xl: 3rem;
  
  /* Enhanced border radius */
  --radius-sm: 0.25rem;
  --radius-md: 0.5rem;
  --radius-lg: 0.75rem;
  --radius-xl: 1rem;
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

@utility btn {
  @apply px-4 py-2 font-medium transition-colors duration-200;
  border-radius: var(--radius-md);
  padding: var(--spacing-sm) var(--spacing-md);
}

@utility btn-primary {
  background-color: var(--primary);
  color: var(--surface);

  &:hover {
    background-color: var(--ring);
  }

  &:focus {
    outline: none;
    box-shadow:
      0 0 0 2px var(--surface),
      0 0 0 4px var(--ring);
  }
}

@utility btn-secondary {
  background-color: var(--secondary);
  color: var(--surface);

  &:hover {
    background-color: #d32f3d;
  }

  &:focus {
    outline: none;
    box-shadow:
      0 0 0 2px var(--surface),
      0 0 0 4px var(--ring);
  }
}

@utility card {
  background-color: var(--surface);
  border: 1px solid #e5e7eb;
  border-radius: var(--radius-lg);
  padding: var(--spacing-lg);
  box-shadow: var(--shadow-elegant);
  transition: all 0.2s ease-in-out;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 
      0 20px 40px -3px rgba(0, 0, 0, 0.15),
      0 8px 12px -2px rgba(0, 0, 0, 0.1);
  }
}

@utility table {
  @apply min-w-full divide-y;
  border-color: #e5e7eb;

  & th {
    @apply px-6 py-3 text-left text-xs font-medium uppercase tracking-wider;
    color: var(--muted);
  }

  & td {
    @apply px-6 py-4 whitespace-nowrap text-sm;
    color: var(--text);
  }

  & tbody tr:hover {
    background-color: #f9fafb;
  }
}

@layer utilities {
  /* Classic Black & Red Color Scheme - using new v4.1.12 theme variables */
  :root {
    --bg: var(--color-bg);
    --surface: var(--color-surface);
    --text: var(--color-text);
    --muted: var(--color-muted);
    --primary: var(--color-primary);
    --secondary: var(--color-secondary);
    --accent: var(--color-accent);
    --ring: var(--color-ring);
  }
}

@layer base {
  body {
    @apply font-sans;
    background-color: var(--bg);
    color: var(--text);
  }
}

/* Custom color utilities */
.bg-primary { background-color: var(--primary); }
.bg-secondary { background-color: var(--secondary); }
.bg-accent { background-color: var(--accent); }
.bg-surface { background-color: var(--surface); }

.text-primary { color: var(--primary); }
.text-secondary { color: var(--secondary); }
.text-accent { color: var(--accent); }
.text-muted { color: var(--muted); }

.border-primary { border-color: var(--primary); }
.border-secondary { border-color: var(--secondary); }
.border-accent { border-color: var(--accent); }

/* New v4.1.12 enhanced utilities */
@utility glass {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

@utility gradient-primary {
  background: linear-gradient(135deg, var(--color-primary), var(--color-secondary));
}

@utility shadow-elegant {
  box-shadow: 
    0 10px 25px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

@utility animate-fade-in {
  animation: fadeIn 0.5s ease-in-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}
